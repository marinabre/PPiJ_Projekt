
<script type='text/javascript' src='https://ssl-webplayer.unity3d.com/download_webplayer-3.x/3.0/uo/jquery.min.js'>
</script>
<script type="text/javascript">
	<!--
	var unityObjectUrl = "http://webplayer.unity3d.com/download_webplayer-3.x/3.0/uo/UnityObject2.js";
	if (document.location.protocol == 'https:')
		unityObjectUrl = unityObjectUrl.replace("http://", "https://ssl-");
	document.write('<script type="text\/javascript" src="' + unityObjectUrl + '"><\/script>');
	-->
</script>
<script type="text/javascript">
	<!--
		var config = {
			width: window.innerWidth * 0.5,
			height: window.innerWidth * 0.5 * 0.5625,
			params: { enableDebugging:"0" }

		};
		var u = new UnityObject2(config);

		jQuery(function() {

			var $missingScreen = jQuery("#unityPlayer").find(".missing");
			var $brokenScreen = jQuery("#unityPlayer").find(".broken");
			$missingScreen.hide();
			$brokenScreen.hide();

			u.observeProgress(function (progress) {
				switch(progress.pluginStatus) {
					case "broken":
						$brokenScreen.find("a").click(function (e) {
							e.stopPropagation();
							e.preventDefault();
							u.installPlugin();
							return false;
						});
						$brokenScreen.show();
					break;
					case "missing":
						$missingScreen.find("a").click(function (e) {
							e.stopPropagation();
							e.preventDefault();
							u.installPlugin();
							return false;
						});
						$missingScreen.show();
					break;
					case "installed":
						$missingScreen.remove();
					break;
					case "first":
					break;
				}
			});
			u.initPlugin(jQuery("#unityPlayer")[0], "http://guess-where.azurewebsites.net/Content/Web player build.unity3d");
		});
	-->
</script>
<style type="text/css">
    <!--
    body {
        font-family: Helvetica, Verdana, Arial, sans-serif;
        background-color: white;
        color: black;
        text-align: center;
    }

    a:link, a:visited {
        color: #000;
    }

    a:active, a:hover {
        color: #666;
    }

    p.header {
        font-size: small;
    }

        p.header span {
            font-weight: bold;
        }

    p.footer {
        font-size: x-small;
    }

    div.content {
        margin: auto;
        width: 960px;
    }

    div.broken,
    div.missing {
        margin: auto;
        position: relative;
        top: 50%;
        width: 193px;
    }

        div.broken a,
        div.missing a {
            height: 63px;
            position: relative;
            top: -31px;
        }

        div.broken img,
        div.missing img {
            border-width: 0px;
        }

    div.broken {
        display: none;
    }

    div#unityPlayer {
        cursor: default;
        height: 300px;
        width: 480px;
        5;
    }

    .row {
        margin-top: 20px;
        min-height: 250px;
        min-width: 500px;
    }

    #hint-container {
        color: #000000;
        text-align: left;
        background: rgba(212, 231, 255, 0.80);
    }

    #controls-container {
        margin: 20px;
    }
    
    #game-container
    {
        margin: 0 auto;
    }
    -->
</style>

<script type="text/javascript">

    var gameLoaded = 0;
    var nextImgEnabled = 1;
    var hintsEnabled = 0;
    var hint = 0;
    var score = 0;
    var currentImg = -1;
    var imgId = [];


    @{ var mod = (List<int>)Model; }

    @foreach(var id in mod)
    {
        @:imgId.push("@id");
            }
    @*var gameID = @:imgId.pop();*@

    $("#nextImgButton").click(function()
    {
        if (nextImgEnabled == 0)
        {
            return;
        }
        nextImgEnabled = 0;
        hintsEnabled = 0;
        currentImg++;
        hint = 1;
        if (currentImg == 0) { EnableGame(); }
        SetImg(imgId[currentImg]);
        GetCoords(imgId[currentImg]);

        $(this).html("Next image");
        if (currentImg > 6)
        {
            $(this).hide();
            alert("Your score is: " + score);
            @*window.location.href = "@Url.Action("GameEnd","Games", new { id = Model[7], score = 0 })"*@
        }
    });

    $("#the-image").load(function()
    {
        hintsEnabled = 1;
        $("#hint1-container").html("");
        $("#hint2-container").html("");
        $("#info-container").html("");
    });

    $("#hint-button").click(function()
    {
        if (hintsEnabled == 0) return;

        if(hint <= 2)
        {
            GetHint(imgId[currentImg]);
        }
    });

    $("#help-button").click(function()
    {
        var text = "Controls needed to play the game:\n-rotating the Earth horizontally" +
                   ": 'A' and 'D' or the left and right arrow keys\n-rotating the Earth ver" +
                   "tically : 'W' and 'S' or the up and down arrow keys\n-pinning the location : 'Q'";
        alert(text);
    });

    function GetCoords(imgID)
    {
        var url = '@Url.Action("GetCoordinates", "Games")' + '?imgID=' + imgID;
        $.get(url, NextImg);
    }

    function updateImg(data)
    {
        $("#the-image").attr("src", "data:image/gif;base64," + data);
    }

    function SetImg(imgID)
    {
        var url = '@Url.Action("GetImage", "Games")' + '?imgID=' + imgID;
        $.get(url,updateImg);
    }

    function EnableGame()
    {
        @*Enables playing game*@
        u.getUnity().SendMessage("Game", "EnableGame", null);
    }

    function GetResult(result)
    {
        @*Called by unity*@
        GetInfo(imgId[currentImg]);
        score += (100 / Cosh(4 * result)) / hint;
        nextImgEnabled = 1;
    }

    function NextImg(coords)
    {
        @*Gives unity coordinates of image*@
        u.getUnity().SendMessage("Game", "NewImage", coords);
    }

    function GetHint(imgID)
    {
        var url = '@Url.Action("GetHint", "Games")' + '?imgID=' + imgID + '&hintNum=' + hint;
        $.get(url, UpdateHint);
    }

    function UpdateHint(result)
    {
        $("#hint" + hint + "-container").html(result);
        hint++;
    }

    function GetInfo(imgID)
    {
        var url = '@Url.Action("GetInfo", "Games")' + '?imgID=' + imgID;
        $.get(url, UpdateInfo);
    }

    function UpdateInfo(result)
    {
        $("#info-container").html(result);
    }

    function Cosh(x)
    {
        var e = Math.E;
        var result = (Math.pow(e, x) + Math.pow(e, (-1) * x)) / 2;
        return result;
    }

    function GameLoaded()
    {
        @*Called by unity*@
        $("#nextImgButton").removeClass("hide");
        $("#hint-button").removeClass("hide");
    }

</script>