@model GuessWhere.Models.Image

@{
    ViewBag.Title = "Adding a new image";
}

<h2 style ="color: cornflowerblue">Create</h2>


@using (Html.BeginForm("Create"  ,   "Images"  ,   null  ,   FormMethod  .Post,   new   {enctype =   "multipart/form-data"  })) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="color: lightsteelblue">
        <h4>Image</h4>
        <hr />
        <div class="form-group">
            @Html.Label("Image", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="image" name="upload" />
                @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.hint1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.hint1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hint1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.hint2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.hint2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hint2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.info, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.info, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.info, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.latitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.latitude@*, new { htmlAttributes = new { @class = "form-control" } }*@)
                @Html.ValidationMessageFor(model => model.latitude, ""@*, new { @class = "text-danger" }*@)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.longitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.longitude@*, new { htmlAttributes = new { @class = "form-control" } }*@)
                @Html.ValidationMessageFor(model => model.longitude, ""@*, new { @class = "text-danger" }*@)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
